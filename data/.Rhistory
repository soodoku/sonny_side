#plot.margin = unit(c(.5, .75, .5, .5), "cm"))
ggplot(d, aes(x=Region, y=estimate)) +
cust_theme +
geom_boxplot() +
xlab("\nRegion") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by US Region") +
coord_flip()
ggplot(d, aes(x=Region, y=estimate)) +
#cust_theme +
geom_boxplot() +
xlab("\nRegion") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by US Region") +
coord_flip()
# Custom ggplot theme
cust_theme <-
theme_minimal() +
theme(panel.grid.major = element_line(color = "#e1e1e1",  linetype = "dotted"),
panel.grid.minor = element_blank(),
legend.position  = "bottom",
legend.key       = element_blank(),
legend.key.width = unit(1, "cm"),
axis.title   = element_text(size = 10, color = "#555555"),
axis.text    = element_text(size = 10, color = "#555555"),
axis.title.x = element_text(vjust = 1, margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(vjust = 1),
axis.ticks   = element_line(color = "#e1e1e1", linetype = "dotted", size = .2),
axis.text.x  = element_text(vjust = .3),
plot.margin = unit(c(.5, .75, .5, .5), "cm"))
ggplot(d, aes(x=Region, y=estimate)) +
#cust_theme +
geom_boxplot() +
xlab("\nRegion") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by US Region") +
coord_flip()
# Custom ggplot theme
cust_theme <-
theme_minimal() +
theme(panel.grid.major = element_line(color = "#e1e1e1",  linetype = "dotted"),
panel.grid.minor = element_blank(),
legend.position  = "bottom",
legend.key       = element_blank(),
legend.key.width = unit(1, "cm"),
axis.title   = element_text(size = 10, color = "#555555"),
axis.text    = element_text(size = 10, color = "#555555"),
axis.title.x = element_text(vjust = 1, margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(vjust = 1),
axis.ticks   = element_line(color = "#e1e1e1", linetype = "dotted", size = .2),
axis.text.x  = element_text(vjust = .3),
plot.margin = unit(c(.5, .75, .5, .5), "cm"))
ggplot(d, aes(x=Region, y=estimate)) +
cust_theme +
geom_boxplot() +
xlab("\nRegion") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by US Region") +
coord_flip()
ggplot(d, aes(x=Region, y=estimate)) +
cust_theme +
geom_boxplot() +
xlab("\nRegion") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by US Region") +
coord_flip()
ggplot(d, aes(x=estimate, y=popestimate2019pct)) +
cust_theme +
geom_point() +
labs(title="\nEstimate of son to daughter ratio vs % of US population per state", x="\nEstimate of son to daughter ratio",y="\nPercentage of US population in State\n")
#ggtitle("Estimate of son to daughter ratio by US Region")
#geom_smooth(method=lm)
#ggplot(d, aes(x=estimate, y=popestimate2019pct, shape=Region, color=Region)) +
# geom_point()
#geom_smooth(method=lm)
ggplot(d, aes(x=Region, y=estimate)) +
cust_theme +
geom_boxplot(color = "#555555") +
xlab("\nRegion") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by US Region") +
coord_flip()
ggplot(d, aes(x=estimate, y=popestimate2019pct)) +
cust_theme +
geom_point(color = "#555555") +
labs(title="\nEstimate of son to daughter ratio vs % of US population per state", x="\nEstimate of son to daughter ratio",y="\nPercentage of US population in State\n")
#ggtitle("Estimate of son to daughter ratio by US Region")
#geom_smooth(method=lm)
#ggplot(d, aes(x=estimate, y=popestimate2019pct, shape=Region, color=Region)) +
# geom_point()
#geom_smooth(method=lm)
ggplot(d, aes(x=estimate, y=gdp_pct)) +
geom_point(color = "#555555") +
labs(title="\nEstimate of son to daughter ratio vs GDP % of US", x="\nEstimate of son to daughter ratio",y="\nGDP Percentage\n")
#ggtitle("Estimate of son to daughter ratio by US Region")
#geom_smooth(method=lm)
#ggplot(d, aes(x=estimate, y=popestimate2019pct, shape=Region, color=Region)) +
# geom_point()
#geom_smooth(method=lm)
ggplot(d, aes(x=estimate, y=gdp_pct)) +
cust_theme +
geom_point(color = "#555555") +
labs(title="\nEstimate of son to daughter ratio vs GDP % of US", x="\nEstimate of son to daughter ratio",y="\nGDP Percentage\n")
#ggtitle("Estimate of son to daughter ratio by US Region")
#geom_smooth(method=lm)
#ggplot(d, aes(x=estimate, y=popestimate2019pct, shape=Region, color=Region)) +
# geom_point()
#geom_smooth(method=lm)
ggplot(d, aes(x=estimate, y=establishments_pct)) +
cust_theme +
geom_point(color = "#555555") +
labs(title="\nEstimate of son to daughter ratio vs # of Establishments", x="\nEstimate of son to daughter ratio",y="\nEstablishments\n")
ggplot(d, aes(x=presidentialelection2016, y=estimate)) +
cust_theme +
geom_boxplot(color = "#555555") +
xlab("\nPolitcal Party") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by mayority Political party (2016 elections)") +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
#Clean R environment
rm(list = ls())
#Load R packages
library(tidyverse)
library(tinytex)
library(latexpdf)
library(knitr)
head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
knitr::opts_chunk$set(echo = TRUE)
#Clean R environment
rm(list = ls())
#Load R packages
library(tidyverse)
library(tinytex)
library(latexpdf)
library(knitr)
#Load CSV file from Excel with data collected for the states
d <- read.csv("../states-work-tracker.csv", stringsAsFactors = FALSE)
str(d)
summary(d)
table(d$Status, useNA = "always") #36 states are done as expected
d <- d[, c(2:7)] #drop raw and unneeded cols
head(d)
#Load CSV with region and division for each state
regions <- read.csv("../data/_states/states_region_division.csv", stringsAsFactors = FALSE)
regions <- regions[, -c(2)] #drop state code
#Load CSV with population estimate by state
pop <- read.csv("../data/_states/nst-est2019-alldata.csv", stringsAsFactors = FALSE)
pop <- pop[pop$STATE != 0 & pop$STATE != 72,] #Excluse summary rows and Puerto Rico from file
pop <- pop[,c("NAME","POPESTIMATE2019")] #Keep only columns of interest (state name and 2019 population)
sum(pop$POPESTIMATE2019) #328.2M is estimated population
pop$popestimate2019pct <- pop$POPESTIMATE2019 / sum(pop$POPESTIMATE2019)
#Load CSV with political party winnining 2016 election
party <- read.csv("../data/_states/presidential_election.csv", stringsAsFactors = FALSE)
#Load CSV with GDP by state
gdp <- read.csv("../data/_states/gdp_by_state.csv", stringsAsFactors = FALSE)
gdp <- gdp[,-c(1)] #remove rank column
gdp$State <- trimws(gdp$State) #remove white space from name
gdp$gdp_pct <- gdp$gdp_pct / 100 #make it as actual pct
#gdp$gdp_mm <- as.integer(gdp$gdp_mm)
#Load US Census data for # of businesses per state
census <- read.csv("../data/_states/us_census_firms_2016.csv", stringsAsFactors = FALSE)
census <- census[census$employment_size == "01:  Total",] #Keep only row with total per area/state
census$establishments_pct <- census$establishments_num / 7757807 #% of establishments in US
census <- census[, c("area", "establishments_num", "establishments_pct")] #Keep only columns of interest
#Merge/Join data to have one master dataset
d <- merge(d, regions, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, pop, by.x = "Name", by.y = "NAME", all.x = TRUE)
d <- merge(d, party, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, gdp, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, census, by.x = "Name", by.y = "area", all.x = TRUE)
#Keep only states with estimate data
d <- d[d$Status %in% c("Done", "Gaurav did"),]
summary(d)
head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
kable(head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")]))
?kable
kable(head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")]), row.names = FALSE)
kable(head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")]), row.names = FALSE,
col.names = colnames(d))
head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
kable(head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")]), row.names = FALSE, digits =3)
kable(head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")]), row.names = FALSE, digits =2)
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")
kable(head(d[, cols2print]), row.names = FALSE, digits =2)
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate",
#"son", "daughter",
"Region",#"Division",
"popestimate2019pct", , "gdp_pct", "establishments_pct","presidentialelection2016")
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate",
#"son", "daughter",
"Region",#"Division",
"popestimate2019pct", "gdp_pct", "establishments_pct","presidentialelection2016")
kable(head(d[, cols2print]), row.names = FALSE, digits =2)
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate",
#"son", "daughter",
"Region",#"Division",
"popestimate2019pct", "gdp_pct", "establishments_pct","presidentialelection2016")
colnames2print <- c("State", "Son/Daughter Ratio",
"US Region",
"Population %", "GDP %", "Establishments %", "Major Political Party")
kable(head(d[, cols2print]), row.names = FALSE, digits =2)
col.names = colnames2print)
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate",
#"son", "daughter",
"Region",#"Division",
"popestimate2019pct", "gdp_pct", "establishments_pct","presidentialelection2016")
colnames2print <- c("State", "Son/Daughter Ratio",
"US Region",
"Population %", "GDP %", "Establishments %", "Major Political Party")
kable(head(d[, cols2print]), row.names = FALSE, digits =2, col.names = colnames2print)
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate",
#"son", "daughter",
"Region",#"Division",
"popestimate2019pct", "gdp_pct", "establishments_pct","presidentialelection2016")
colnames2print <- c("State", "Son/Daughter Ratio",
"US Region",
"Population %", "GDP %", "Establishments %", "Major Political Party")
kable(head(d[, cols2print]), row.names = FALSE, digits =3, col.names = colnames2print)
#d[, c("Name","estimate","son","daughter")]
cols2print <- c("Name", "estimate",
"son", "daughter")#,
#"conservative_flag")
colnames2print <- c("State", "Son/Daughter Ratio",
"# Companies with 'son'", "# Companies with 'daughter'"),
#d[, c("Name","estimate","son","daughter")]
cols2print <- c("Name", "estimate",
"son", "daughter")#,
#"conservative_flag")
colnames2print <- c("State", "Son/Daughter Ratio",
"# Companies with son", "# Companies with daughter")#,
#"Conservative Estimate")
kable(d[, cols2print], row.names = FALSE, digits =3, col.names = colnames2print)
str(d)
#d[, c("Name","estimate","son","daughter")]
cols2print <- c("Name", "estimate",
"son", "daughter")#,
#"conservative_flag")
colnames2print <- c("State", "Son/Daughter Ratio",
"# Companies with son", "# Companies with daughter")#,
#"Conservative Estimate")
kable(d[, cols2print], row.names = FALSE, digits =0, col.names = colnames2print)
#Load CSV file from Excel with data collected for the states
d <- read.csv("../states-work-tracker.csv", stringsAsFactors = FALSE)
str(d)
summary(d)
table(d$Status, useNA = "always") #36 states are done as expected
d <- d[, c(2:8)] #drop raw and unneeded cols
head(d)
#Load CSV with region and division for each state
regions <- read.csv("../data/_states/states_region_division.csv", stringsAsFactors = FALSE)
regions <- regions[, -c(2)] #drop state code
#Load CSV with population estimate by state
pop <- read.csv("../data/_states/nst-est2019-alldata.csv", stringsAsFactors = FALSE)
pop <- pop[pop$STATE != 0 & pop$STATE != 72,] #Excluse summary rows and Puerto Rico from file
pop <- pop[,c("NAME","POPESTIMATE2019")] #Keep only columns of interest (state name and 2019 population)
sum(pop$POPESTIMATE2019) #328.2M is estimated population
pop$popestimate2019pct <- pop$POPESTIMATE2019 / sum(pop$POPESTIMATE2019)
#Load CSV with political party winnining 2016 election
party <- read.csv("../data/_states/presidential_election.csv", stringsAsFactors = FALSE)
#Load CSV with GDP by state
gdp <- read.csv("../data/_states/gdp_by_state.csv", stringsAsFactors = FALSE)
gdp <- gdp[,-c(1)] #remove rank column
gdp$State <- trimws(gdp$State) #remove white space from name
gdp$gdp_pct <- gdp$gdp_pct / 100 #make it as actual pct
#gdp$gdp_mm <- as.integer(gdp$gdp_mm)
#Load US Census data for # of businesses per state
census <- read.csv("../data/_states/us_census_firms_2016.csv", stringsAsFactors = FALSE)
census <- census[census$employment_size == "01:  Total",] #Keep only row with total per area/state
census$establishments_pct <- census$establishments_num / 7757807 #% of establishments in US
census <- census[, c("area", "establishments_num", "establishments_pct")] #Keep only columns of interest
#Merge/Join data to have one master dataset
d <- merge(d, regions, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, pop, by.x = "Name", by.y = "NAME", all.x = TRUE)
d <- merge(d, party, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, gdp, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, census, by.x = "Name", by.y = "area", all.x = TRUE)
#Keep only states with estimate data
d <- d[d$Status %in% c("Done", "Gaurav did"),]
summary(d)
knitr::opts_chunk$set(echo = TRUE)
#Clean R environment
rm(list = ls())
#Load R packages
library(tidyverse)
library(tinytex)
library(latexpdf)
library(knitr)
d <- read.csv("../states-work-tracker.csv", stringsAsFactors = FALSE)
str(d)
summary(d)
#Load CSV file from Excel with data collected for the states
d <- read.csv("../states-work-tracker.csv", stringsAsFactors = FALSE)
str(d)
summary(d)
#Load CSV file from Excel with data collected for the states
d <- read.csv("../states-work-tracker.csv", stringsAsFactors = FALSE)
str(d)
summary(d)
table(d$Status, useNA = "always") #36 states are done as expected
d <- d[, c(2:7,11)] #drop raw and unneeded cols
head(d)
#Load CSV file from Excel with data collected for the states
d <- read.csv("../states-work-tracker.csv", stringsAsFactors = FALSE)
str(d)
summary(d)
table(d$Status, useNA = "always") #36 states are done as expected
d <- d[, c(2:7,11)] #drop raw and unneeded cols
head(d)
#Load CSV with region and division for each state
regions <- read.csv("../data/_states/states_region_division.csv", stringsAsFactors = FALSE)
regions <- regions[, -c(2)] #drop state code
#Load CSV with population estimate by state
pop <- read.csv("../data/_states/nst-est2019-alldata.csv", stringsAsFactors = FALSE)
pop <- pop[pop$STATE != 0 & pop$STATE != 72,] #Excluse summary rows and Puerto Rico from file
pop <- pop[,c("NAME","POPESTIMATE2019")] #Keep only columns of interest (state name and 2019 population)
sum(pop$POPESTIMATE2019) #328.2M is estimated population
pop$popestimate2019pct <- pop$POPESTIMATE2019 / sum(pop$POPESTIMATE2019)
#Load CSV with political party winnining 2016 election
party <- read.csv("../data/_states/presidential_election.csv", stringsAsFactors = FALSE)
#Load CSV with GDP by state
gdp <- read.csv("../data/_states/gdp_by_state.csv", stringsAsFactors = FALSE)
gdp <- gdp[,-c(1)] #remove rank column
gdp$State <- trimws(gdp$State) #remove white space from name
gdp$gdp_pct <- gdp$gdp_pct / 100 #make it as actual pct
#gdp$gdp_mm <- as.integer(gdp$gdp_mm)
#Load US Census data for # of businesses per state
census <- read.csv("../data/_states/us_census_firms_2016.csv", stringsAsFactors = FALSE)
census <- census[census$employment_size == "01:  Total",] #Keep only row with total per area/state
census$establishments_pct <- census$establishments_num / 7757807 #% of establishments in US
census <- census[, c("area", "establishments_num", "establishments_pct")] #Keep only columns of interest
#Merge/Join data to have one master dataset
d <- merge(d, regions, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, pop, by.x = "Name", by.y = "NAME", all.x = TRUE)
d <- merge(d, party, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, gdp, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, census, by.x = "Name", by.y = "area", all.x = TRUE)
#Keep only states with estimate data
d <- d[d$Status %in% c("Done", "Gaurav did"),]
summary(d)
#d[, c("Name","estimate","son","daughter")]
cols2print <- c("Name", "estimate",
"son", "daughter",
"conservative_flag")
colnames2print <- c("State", "Son/Daughter Ratio",
"# Companies with son", "# Companies with daughter",
"Conservative Estimate")
kable(d[, cols2print], row.names = FALSE, digits =0, col.names = colnames2print)
knitr::opts_chunk$set(echo = TRUE)
#Clean R environment
rm(list = ls())
#Load R packages
library(tidyverse)
library(tinytex)
library(latexpdf)
library(knitr)
#Load CSV file from Excel with data collected for the states
d <- read.csv("../states-work-tracker.csv", stringsAsFactors = FALSE)
str(d)
summary(d)
table(d$Status, useNA = "always") #36 states are done as expected
d <- d[, c(2:7,11)] #drop raw and unneeded cols
head(d)
#Load CSV with region and division for each state
regions <- read.csv("../data/_states/states_region_division.csv", stringsAsFactors = FALSE)
regions <- regions[, -c(2)] #drop state code
#Load CSV with population estimate by state
pop <- read.csv("../data/_states/nst-est2019-alldata.csv", stringsAsFactors = FALSE)
pop <- pop[pop$STATE != 0 & pop$STATE != 72,] #Excluse summary rows and Puerto Rico from file
pop <- pop[,c("NAME","POPESTIMATE2019")] #Keep only columns of interest (state name and 2019 population)
sum(pop$POPESTIMATE2019) #328.2M is estimated population
pop$popestimate2019pct <- pop$POPESTIMATE2019 / sum(pop$POPESTIMATE2019)
#Load CSV with political party winnining 2016 election
party <- read.csv("../data/_states/presidential_election.csv", stringsAsFactors = FALSE)
#Load CSV with GDP by state
gdp <- read.csv("../data/_states/gdp_by_state.csv", stringsAsFactors = FALSE)
gdp <- gdp[,-c(1)] #remove rank column
gdp$State <- trimws(gdp$State) #remove white space from name
gdp$gdp_pct <- gdp$gdp_pct / 100 #make it as actual pct
#gdp$gdp_mm <- as.integer(gdp$gdp_mm)
#Load US Census data for # of businesses per state
census <- read.csv("../data/_states/us_census_firms_2016.csv", stringsAsFactors = FALSE)
census <- census[census$employment_size == "01:  Total",] #Keep only row with total per area/state
census$establishments_pct <- census$establishments_num / 7757807 #% of establishments in US
census <- census[, c("area", "establishments_num", "establishments_pct")] #Keep only columns of interest
#Merge/Join data to have one master dataset
d <- merge(d, regions, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, pop, by.x = "Name", by.y = "NAME", all.x = TRUE)
d <- merge(d, party, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, gdp, by.x = "Name", by.y = "State", all.x = TRUE)
d <- merge(d, census, by.x = "Name", by.y = "area", all.x = TRUE)
#Keep only states with estimate data
d <- d[d$Status %in% c("Done", "Gaurav did"),]
summary(d)
summary(d)
sum(d$popestimate2019pct) #69.9%
sum(d$gdp_pct) #71.2%
sum(d$establishments_pct) #71.1%
#head(d[, c("Name", "estimate", "son", "daughter","Region","Division","popestimate2019pct", "presidentialelection2016", "gdp_pct", "establishments_pct")])
cols2print <- c("Name", "estimate",
#"son", "daughter",
"Region",#"Division",
"popestimate2019pct", "gdp_pct", "establishments_pct","presidentialelection2016")
colnames2print <- c("State", "Son/Daughter Ratio",
"US Region",
"Population %", "GDP %", "Establishments %", "Major Political Party")
kable(head(d[, cols2print]), row.names = FALSE, digits =3, col.names = colnames2print)
#summary(d)
# Custom ggplot theme
cust_theme <-
theme_minimal() +
theme(panel.grid.major = element_line(color = "#e1e1e1",  linetype = "dotted"),
panel.grid.minor = element_blank(),
legend.position  = "bottom",
legend.key       = element_blank(),
legend.key.width = unit(1, "cm"),
axis.title   = element_text(size = 10, color = "#555555"),
axis.text    = element_text(size = 10, color = "#555555"),
axis.title.x = element_text(vjust = 1, margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(vjust = 1),
axis.ticks   = element_line(color = "#e1e1e1", linetype = "dotted", size = .2),
axis.text.x  = element_text(vjust = .3),
plot.margin = unit(c(.5, .75, .5, .5), "cm"))
ggplot(d, aes(x = estimate, y = reorder(Name, estimate))) +
cust_theme +
geom_point(color = "#555555") +
#scale_x_continuous(limits = c(0, 75),
#	breaks = seq(0, 75, 5)) +
xlab("\nRatio") +
ylab("State Name\n") +
ggtitle("Ratio of company names using word 'son' vs 'daughter'")
#Dot Plot of all states with estimate data
#ggplot(d, aes(x = estimate, y = reorder(Name, estimate))) +#
#geom_point(color = "blue") +
#scale_x_continuous(limits = c(0, 75),
#		breaks = seq(0, 75, 5)) +
#	xlab("\nRatio") +
#	ylab("State Name\n") +
#	ggtitle("Ratio of company names using word 'son' vs 'daughter'")
table(d$Region)
aggregate(estimate ~ Region, d, FUN = median)
ggplot(d, aes(x=Region, y=estimate)) +
cust_theme +
geom_boxplot(color = "#555555") +
xlab("\nRegion") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by US Region") +
coord_flip()
cor(d$POPESTIMATE2019, d$estimate)
cor(d$popestimate2019pct, d$estimate)
ggplot(d, aes(x=estimate, y=popestimate2019pct)) +
cust_theme +
geom_point(color = "#555555") +
labs(title="\nEstimate of son to daughter ratio vs % of US population per state", x="\nEstimate of son to daughter ratio",y="\nPercentage of US population in State\n")
#ggtitle("Estimate of son to daughter ratio by US Region")
#geom_smooth(method=lm)
#ggplot(d, aes(x=estimate, y=popestimate2019pct, shape=Region, color=Region)) +
# geom_point()
#geom_smooth(method=lm)
cor(d$gdp_mm, d$estimate)
cor(d$gdp_pct, d$estimate)
ggplot(d, aes(x=estimate, y=gdp_pct)) +
cust_theme +
geom_point(color = "#555555") +
labs(title="\nEstimate of son to daughter ratio vs GDP % of US", x="\nEstimate of son to daughter ratio",y="\nGDP Percentage\n")
#ggtitle("Estimate of son to daughter ratio by US Region")
#geom_smooth(method=lm)
#ggplot(d, aes(x=estimate, y=popestimate2019pct, shape=Region, color=Region)) +
# geom_point()
#geom_smooth(method=lm)
cor(d$establishments_num, d$estimate)
cor(d$establishments_pct, d$estimate)
ggplot(d, aes(x=estimate, y=establishments_pct)) +
cust_theme +
geom_point(color = "#555555") +
labs(title="\nEstimate of son to daughter ratio vs # of Establishments", x="\nEstimate of son to daughter ratio",y="\nEstablishments\n")
table(d$presidentialelection2016)
aggregate(estimate ~ presidentialelection2016, d, FUN = median)
ggplot(d, aes(x=presidentialelection2016, y=estimate)) +
cust_theme +
geom_boxplot(color = "#555555") +
xlab("\nPolitcal Party") +
ylab("\nEstimate of son to daughter ratio") +
ggtitle("Estimate of son to daughter ratio by mayority Political party (2016 elections)") +
coord_flip()
#d[, c("Name","estimate","son","daughter")]
cols2print <- c("Name", "estimate",
"son", "daughter",
"conservative_flag")
colnames2print <- c("State", "Son/Daughter Ratio",
"# Companies with son", "# Companies with daughter",
"Conservative Estimate")
kable(d[, cols2print], row.names = FALSE, digits =0, col.names = colnames2print)
knitr::opts_chunk$set(echo = TRUE)
#Clean R environment
rm(list = ls())
#Load R packages
library(tidyverse)
library(tinytex)
library(latexpdf)
library(knitr)
install.packages('tinytex')
install.packages("tinytex")
tinytex::install_tinytex()
